{"version":3,"sources":["componentes/Header.js","componentes/Formulario.js","helper.js","componentes/Resumen.js","componentes/Resultado.js","componentes/App.js","registerServiceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","titulo","Formulario","marcaRef","React","createRef","yearRef","planBasicoRef","planCompletoRef","cotizarSeguro","e","preventDefault","plan","_this","current","checked","infoAuto","marca","value","year","onSubmit","this","name","ref","type","Component","primeraMayuscula","texto","charAt","toUpperCase","slice","Resumen","mostrarResumen","_this$props$datos","datos","Resultado","resultado","mensaje","react_transition_group","component","classNames","key","timeout","enter","exit","App","state","Date","getFullYear","obtenerDiferenciaAnio","modelo","incremento","calcularMarca","incrementoPlan","obtenerPlan","parseFloat","toFixed","datosAuto","setState","componentes_Header","componentes_Formulario","componentes_Resumen","componentes_Resultado","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","componentes_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.53b7e265.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = props => {\n     return(\n          <header className=\"top\">\n               <h1>\n                   {props.titulo}\n               </h1>\n          </header>\n     )\n}\nexport default Header;","import React, {Component} from 'react';\n\nclass Formulario extends Component {\n\n     // refs son para leer los valores de los campos de un formulario\n     marcaRef = React.createRef();\n     yearRef = React.createRef();\n     planBasicoRef = React.createRef();\n     planCompletoRef = React.createRef();\n\n     cotizarSeguro = (e) =>  {\n          e.preventDefault();\n\n          // leer el plan\n          const plan = this.planBasicoRef.current.checked ? 'basico' : 'completo';\n\n          // obtener los datos\n          // console.log(this.marcaRef.current.value);\n\n          // crear el objeto\n          const infoAuto = {\n               marca: this.marcaRef.current.value,\n               year: this.yearRef.current.value,\n               plan : plan\n          }\n\n          // console.log(infoAuto);\n\n          // enviarlo al componente principal\n          this.props.cotizarSeguro(infoAuto);\n\n          // resetear el formulario (opcional)\n          // e.currentTarget.reset() \n     }\n\n     render() {\n          return (\n              <form className=\"cotizar-auto\" onSubmit={this.cotizarSeguro} >\n                  <div className=\"campo\">\n                      <label>Marca</label>\n                    <select name=\"marca\" ref={this.marcaRef} >\n                      <option value=\"americano\">Americano</option>\n                      <option value=\"europeo\">Europeo</option>\n                      <option value=\"asiatico\">Asiatico</option>\n                  </select>\n                  </div>\n  \n                  <div className=\"campo\">\n                      <label>Año</label>\n                      <select name=\"year\" ref={this.yearRef} >\n                          <option value=\"2018\">2018</option>\n                          <option value=\"2017\">2017</option>\n                          <option value=\"2016\">2016</option>\n                          <option value=\"2015\">2015</option>\n                          <option value=\"2014\">2014</option>\n                          <option value=\"2013\">2013</option>\n                          <option value=\"2012\">2012</option>\n                          <option value=\"2011\">2011</option>\n                          <option value=\"2010\">2010</option>\n                          <option value=\"2009\">2009</option>\n                          <option value=\"2008\">2008</option>\n                      </select>\n                  </div>\n                  <div className=\"campo\">\n                      <label>Plan:</label>\n                      <input type=\"radio\" ref={this.planBasicoRef}  name=\"plan\" value=\"basico\"/> Básico\n                      <input type=\"radio\" ref={this.planCompletoRef}  name=\"plan\" value=\"completo\"/> Completo\n                  </div>\n  \n                  <button type=\"submit\" className=\"boton\">Cotizar</button>\n              </form>\n          );\n      }\n}\nexport default Formulario;","\nexport function obtenerDiferenciaAnio(year) {\n     return new Date().getFullYear() - year;\n  }\n  \n  export function calcularMarca( modelo ) {\n      let incremento;\n  \n      switch (modelo) {\n          case 'europeo':\n              incremento = 1.30;\n              break;\n          case 'americano':\n              incremento = 1.15;\n              break;\n          case 'asiatico':\n              incremento = 1.05;\n              break;\n          default:\n              break;\n      }\n  \n      return incremento;\n  }\n  export function obtenerPlan( plan ) {\n      return (plan === 'basico') ? 1.20 : 1.50;\n  }\n  export function primeraMayuscula(texto) {\n      return texto.charAt(0).toUpperCase() + texto.slice(1);\n  }","import React, {Component} from 'react';\nimport {primeraMayuscula} from '../helper';\n\n\nclass Resumen extends Component {\n\n     mostrarResumen = () => {\n          const {marca, year, plan} = this.props.datos;\n\n          if(!marca || !year || !plan) return null;\n\n          return (\n               <div className=\"resumen\">\n                    <h2>Resumen de Cotización</h2>\n                    <li>Marca: { primeraMayuscula( marca ) }</li>\n                    <li>Plan: { primeraMayuscula( plan ) }</li>\n                    <li>Año del Auto: {year}</li>\n               </div>\n          )\n     }\n\n     render() {\n          \n\n          return(\n               <div>\n                    { this.mostrarResumen() }\n                    \n               </div>\n          )\n     }\n}\n\nexport default Resumen;","import React, {Component} from 'react';\nimport {TransitionGroup, CSSTransition} from 'react-transition-group';\n\nclass Resultado extends Component {\n     render() {\n          const resultado = this.props.resultado;\n          const mensaje = (!resultado) ? 'Elije Marca, Año y Tipo de Seguro' : 'El total es: $';\n          return(\n               <div className=\"gran-total\">\n                    {mensaje}\n                    <TransitionGroup component=\"span\" className=\"resultado\">\n                         <CSSTransition \n                              classNames=\"resultado\"\n                               key={resultado} \n                               timeout={{enter: 500, exit: 500}} >\n                               <span>{resultado}</span>\n                         </CSSTransition>\n                    </TransitionGroup>\n               </div>\n          )\n     }\n}\n\nexport default Resultado;","import React, { Component } from 'react';\nimport Header from './Header';\nimport Formulario from './Formulario';\nimport Resumen from './Resumen';\nimport Resultado from './Resultado';\nimport {obtenerDiferenciaAnio, calcularMarca, obtenerPlan} from '../helper';\n\n\nclass App extends Component {\n\n  state = {\n      resultado : '',\n      datos: {}\n  }\n\n  cotizarSeguro = (datos) => {\n    const {marca, plan, year} = datos;\n\n    // Agregar una base de 2000, \n    let resultado = 2000;\n\n    // Obtener la diferencia de años y \n    const diferencia = obtenerDiferenciaAnio(year);\n\n    // por cada año restar el 3% al valor del seguro\n    resultado -= ((diferencia * 3) * resultado ) / 100;\n\n    // Americano 15% Asiatico 5% y europeo 30% de incremento al valor actual\n    resultado = calcularMarca(marca) * resultado;\n\n    // el plan del auto, el básico incrementa el valor 20% y cobertura completa 50%\n    let incrementoPlan = obtenerPlan(plan);\n\n    // dependiendo del plan incrementar\n    resultado =  parseFloat( incrementoPlan * resultado).toFixed(2);\n\n    // crear objeto para el resumen\n    const datosAuto = {\n      marca : marca,\n      plan : plan,\n      year : year\n    }\n\n    // ya tenemos el costo.\n    this.setState({\n      resultado : resultado,\n      datos : datosAuto\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"contenedor\">\n        <Header \n          titulo = 'Cotizador de Seguro de Auto'\n        />\n\n        <div className=\"contenedor-formulario\">\n          <Formulario\n            cotizarSeguro={this.cotizarSeguro}\n          />\n          <Resumen \n            datos={this.state.datos}\n          />\n          <Resultado\n            resultado={this.state.resultado}\n          />\n        </div>\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './componentes/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}